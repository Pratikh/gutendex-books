{"version":3,"sources":["assets/icons/index.js","assets/icons/Fiction.svg","assets/icons/Drama.svg","assets/icons/Humour.svg","assets/icons/Politics.svg","assets/icons/History.svg","assets/icons/Adventure.svg","assets/icons/Philosophy.svg","assets/icons/Next.svg","components/Home.js","assets/icons/Back.svg","components/NavBar.js","components/BookTiles.js","components/BookList.js","App.js","serviceWorker.js","index.js"],"names":["exportData","Fiction","Drama","Humour","Politics","History","Adventure","Philosophy","Next","ListedItem","items","onSelect","style","padding","margin","map","item","className","onClick","backgroundImage","svgIcons","toLocaleUpperCase","HomePage","setGenre","configData","page_tittle","sub_title","category","AppBar","props","_","bindAll","event","value","target","this","onChange","preventDefault","type","navigateBack","backIcon","placeholder","aria-label","onValueInpute","Component","Tile","img","title","author","src","alt","BookTiles","tileData","onClickGridItem","tile","id","cache","setupCache","maxAge","isComponentMounted","api","axios","create","adapter","BookList","state","error","books","next","searchText","hasMoreData","isLoading","topic","openIframe","iframeSrc","previousBooks","location","searchString","search","pathname","queryString","parse","setState","loadLink","api_path","loadBooksByLink","loadCallback","debounce","addMoreBookTiles","debouncedSearch","onSearchHandler","document","addEventListener","removeEventListener","documentElement","scrollTop","window","innerHeight","offsetHeight","link","get","response","data","results","posterImageBooksList","filter","formats","authors","name","message","searchObj","clone","stringify","history","push","forEach","extensions","format","formatLink","find","keys","bookFormat","includes","alert","navigateBackHandler","setSearchTextHandler","withRouter","App","pushGenrebinded","pushGenreToHistory","bind","mime_type","query","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.50321461.chunk.js","sourcesContent":["import Fiction from './Fiction.svg';\nimport Drama from './Drama.svg';\nimport Humour from './Humour.svg';\nimport Politics from './Politics.svg';\nimport History from './History.svg';\nimport Adventure from './Adventure.svg';\nimport Philosophy from './Philosophy.svg';\nimport Next from './Next.svg';\nconst exportData = {\n  Fiction,\n  Drama,\n  Humour,\n  Politics,\n  History,\n  Adventure,\n  Philosophy,\n  Next\n};\n\nexport default exportData;\n","export default __webpack_public_path__ + \"static/media/Fiction.c794b5b6.svg\";","export default __webpack_public_path__ + \"static/media/Drama.0e522682.svg\";","export default __webpack_public_path__ + \"static/media/Humour.3f583231.svg\";","export default __webpack_public_path__ + \"static/media/Politics.d65dec50.svg\";","export default __webpack_public_path__ + \"static/media/History.7ab22bf1.svg\";","export default __webpack_public_path__ + \"static/media/Adventure.74038d3e.svg\";","export default __webpack_public_path__ + \"static/media/Philosophy.4ec2f970.svg\";","export default __webpack_public_path__ + \"static/media/Next.b3e690a6.svg\";","import React from \"react\";\nimport \"./Home.css\";\nimport configData from \"../config.json\";\nimport svgIcons from \"../assets/icons/index\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nfunction ListedItem({ items, onSelect }) {\n  return (\n    <div style={{ padding: \"10px\", margin: \"10px\" }}>\n      {items.map((item) => (\n        <div\n          className=\"categoryList\"\n          key={`/books/${item}`}\n          onClick={() => onSelect(item)}\n        >\n          <div\n            className=\"categoryIcon\"\n            style={{ backgroundImage: `url(${svgIcons[item]})` }}\n          ></div>\n          <h5>{item.toLocaleUpperCase()}</h5>\n          <div\n            className=\"next\"\n            style={{ backgroundImage: `url(${svgIcons[\"Next\"]})` }}\n          ></div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst HomePage = ({setGenre }) => {\n  return (\n    <div>\n      <h4 className=\"title\">{configData.page_tittle}</h4>\n      <h2 className=\"subTitle\">{configData.sub_title}</h2>\n      <ListedItem items={configData.category} onSelect={setGenre} />\n    </div>\n  );\n};\n\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/Back.98344a95.svg\";","import { Component } from \"react\";\nimport _ from \"lodash\";\nimport backIcon from '../assets/icons/Back.svg';\n\nexport default class AppBar extends Component {\n  constructor(props) {\n    super(props);\n    _.bindAll(this, \"onValueInpute\");\n  }\n\n  onValueInpute(event) {\n    const {\n      target: { value },\n    } = event;\n    this.props.onChange(value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <nav className={\"navbar navbar-expand-lg navbar-light bg-light\"}>\n        <button\n          type=\"button\"\n          className=\"btn btn-primary\"\n          onClick={this.props.navigateBack}\n          style={{ backgroundImage: backIcon }}\n        >\n          Back\n        </button>\n        <form className=\"form-inline my-2 my-lg-0 d-inline-block align-top\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={this.onValueInpute}\n          />\n        </form>\n      </nav>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./BookTiles.css\";\n\nconst Tile = ({ img, title, author }) => {\n  return (\n    <div>\n      <img src={img} alt={title + \" image\"} className=\"bookImage\" />\n      <div className=\"details\">\n        <h2 className=\"bookData\">{title}</h2>\n        <p className=\"bookData\">{author}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default function BookTiles({ tileData, onClickGridItem }) {\n  return (\n    <div className=\"bookMainGridWrapper\">\n      {tileData.map((tile) => (\n        <div\n          key={tile.title + tile.author + tile.id}\n          onClick={() => onClickGridItem(tile)}\n          className=\"detailsContainer\"\n        >\n          <Tile img={tile.img} title={tile.title} author={tile.author}></Tile>\n        </div>\n      ))}\n    </div>\n  );\n}\n","import queryString from \"query-string\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\n// import extractZip from \"extract-zip\"\n\nimport { api_path} from \"../config.json\";\nimport { setupCache } from \"axios-cache-adapter\";\nimport { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport \"./BookList.css\";\nimport NavBar from \"./NavBar\";\nimport BookTiles from \"./BookTiles\";\nimport configData from \"../config.json\";\n\n// Create `axios-cache-adapter` instance\nconst cache = setupCache({\n  maxAge: 15 * 60 * 1000,\n});\n\nlet isComponentMounted = false;\n\n// Create `axios` instance passing the newly created `cache.adapter`\nconst api = axios.create({\n  adapter: cache.adapter,\n});\n\nclass BookList extends Component {\n  constructor(props) {\n    super(props);\n    _.bindAll(\n      this,\n      \"loadBooksByLink\",\n      \"setSearchTextHandler\",\n      \"onSearchHandler\",\n      \"navigateBackHandler\",\n      \"onClickGridItem\",\n      \"addMoreBookTiles\"\n    );\n    this.state = {\n      error: false,\n      books: [],\n      next: \"\",\n      searchText: \"\",\n      hasMoreData: true,\n      isLoading: false,\n      topic: \"\",\n      openIframe: false,\n      iframeSrc: \"\",\n      title: \"\",\n    };\n    this.previousBooks = null;\n  }\n\n  componentDidMount() {\n    isComponentMounted = true;\n    const { location: { search: searchString, pathname },\n    } = this.props;\n\n    const { search: searchText, topic } = queryString.parse(searchString);\n    this.setState({ searchText, topic });\n\n    const loadLink = `${api_path}${pathname}${searchString}`;\n    this.loadBooksByLink(loadLink);\n\n    this.loadCallback = _.debounce(this.addMoreBookTiles, 100);\n    this.debouncedSearch = _.debounce(this.onSearchHandler, 500);\n    document.addEventListener(\"scroll\", this.loadCallback);\n  }\n\n  componentWillUnmount() {\n    isComponentMounted = false;\n    document.removeEventListener(\"scroll\", this.loadCallback);\n  }\n\n  addMoreBookTiles() {\n    const {\n      state: { error, isLoading, hasMoreData, next },\n    } = this;\n\n    if (error || isLoading || !hasMoreData) {\n      return;\n    }\n\n    if (\n      document.documentElement.scrollTop + window.innerHeight >=\n      document.documentElement.offsetHeight\n    ) {\n      this.loadBooksByLink(next);\n    }\n  }\n\n  async loadBooksByLink(link) {\n    // loading books by provided url.\n    if (this.state.isLoading) {\n      // Dont go below if already loading\n      return;\n    }\n    try {\n      this.setState({ isLoading: true });\n      const response = await api.get(link);\n      const { results, next } = response.data;\n      const posterImageBooksList = results.filter(\n        ({ formats }) => !!formats[\"image/jpeg\"]\n      );\n      const books = _.map(\n        posterImageBooksList,\n        ({ title, authors, id, formats }) => ({\n          title,\n          author: authors[0] ? authors[0].name : \"No authors\",\n          id,\n          formats,\n          img: formats[\"image/jpeg\"],\n        })\n      );\n\n      if (isComponentMounted) {\n        this.setState({\n          next,\n          hasMoreData: !!next,\n          books: [...this.state.books, ...books],\n          isLoading: false,\n        });\n      }\n    } catch (error) {\n      this.setState({\n        error: error.message,\n        isLoading: false,\n      });\n    }\n  }\n\n  setSearchTextHandler(searchText) {\n    this.setState({ searchText });\n    this.debouncedSearch();\n  }\n\n  onSearchHandler() {\n    const {\n      location: { search: searchString, pathname },\n    } = this.props;\n\n    const searchObj = {\n      ...queryString.parse(searchString),\n      search: this.state.searchText,\n    };\n    if (!this.previousBooks) {\n      this.previousBooks = _.clone(this.state.books);\n    }\n    this.setState({ books: [] });\n    this.loadBooksByLink(\n      `${api_path}${pathname}?${queryString.stringify(searchObj)}`\n    );\n  }\n\n  navigateBackHandler() {\n    if (this.state.openIframe) {\n      this.setState({ openIframe: false, title: \"\" });\n    } else if (this.previousBooks) {\n      this.setState({\n        books: this.previousBooks,\n      });\n    } else {\n      const { history } = this.props;\n      history.push(\"/\");\n    }\n    this.previousBooks = null;\n  }\n\n  async onClickGridItem({ formats, title }) {\n    let link = null;\n    _.forEach(configData.extensions, (format) => {\n      const formatLink = _.find(_.keys(formats), (bookFormat) => {\n        return _.includes(bookFormat, format);\n      });\n      if (formatLink) {\n        link = formats[formatLink];\n        return false;\n      }\n    });\n    this.setState({\n      iframeSrc: link,\n      openIframe: true,\n      title,\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      books,\n      error,\n      topic,\n      hasMoreData,\n      searchText,\n      openIframe,\n      iframeSrc,\n      title,\n    } = this.state;\n    if (error) {\n      alert(error);\n    }\n    return (\n      <div>\n        <NavBar\n          navigateBack={this.navigateBackHandler}\n          onChange={this.setSearchTextHandler}\n          searchText={searchText}\n        />\n        <h1>{topic + \" \" + title}</h1>\n        {openIframe && <iframe title={\"myfame\"} src={iframeSrc}></iframe>}\n        <BookTiles\n          tileData={books}\n          onClickGridItem={this.onClickGridItem}\n        ></BookTiles>\n        {isLoading && (\n          <div className=\"loaderContainer\">\n            <div className=\"loader\" />\n          </div>\n        )}\n        {!hasMoreData && !isLoading && <div>All books loaded...</div>}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(BookList);\n","import 'bootstrap/dist/css/bootstrap.css';\nimport { Component } from \"react\";\nimport queryString from \"query-string\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport HomePage from \"./components/Home\";\nimport BookList from \"./components/BookList\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.pushGenrebinded = this.pushGenreToHistory.bind(this)\n  }\n\n  pushGenreToHistory(topic) {\n    const searchObj = {\n      topic,\n      mime_type: \"image/jpeg\"\n    };\n\n    const query = queryString.stringify(searchObj);\n    this.props.history.push(`/books?${query}`);\n  };\n\n  render() {\n    return (\n      <>\n        <Route exact path=\"/\" component={\n          () => (\n          <HomePage setGenre={this.pushGenrebinded} />\n        )} />\n        <Route path=\"/books\" component={()=>(<BookList />)} />\n      </>\n    );\n    }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}